//Copyright 2017 Ellucian Company L.P. and its affiliates.

using Ellucian.Generated.Eedm.Converters;
using Newtonsoft.Json;

namespace Ellucian.Generated.Eedm
{
    /// <summary>
    /// Commercial agreements with vendors for the purchasing of commodities. 
    /// </summary>
    [JsonObject(MemberSerialization.OptIn)]
    public class PurchaseOrders_V10_0 : BaseModel2
    {
        /// <summary>
        /// The order number generated by the finance system.
        /// </summary>
        [JsonProperty("orderNumber", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public string OrderNumber { get; set; }

        /// <summary>
        /// The type of purchase order, i.e. Procurement, eProcurement, or Travel
        /// </summary>
        [JsonProperty("type", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public PurchaseOrdersTypes? Type { get; set; }

        /// <summary>
        /// A reference number which represents the originating system's source document.
        /// </summary>
        [JsonProperty("referenceNumbers", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public List<string> ReferenceNumbers { get; set; }

        /// <summary>
        /// The source account for the purchase order
        /// </summary>
        [JsonProperty("paymentSource", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public GuidObject2 PaymentSource { get; set; }

        /// <summary>
        /// The date the purchase order was created.
        /// </summary>
        [JsonConverter(typeof(DateOnlyConverter))]
        [JsonProperty("orderedOn", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public DateTime OrderedOn { get; set; }

        /// <summary>
        /// The transaction date for the purchase order. This will be the date used when entering the transactions into the general ledger.
        /// </summary>
        [JsonConverter(typeof(DateOnlyConverter))]
        [JsonProperty("transactionDate", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public DateTime TransactionDate { get; set; }

        /// <summary>
        /// The expected delivery date for the purchase order.
        /// </summary>
        [JsonConverter(typeof(DateOnlyConverter))]
        [JsonProperty("deliveredBy", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public DateTime DeliveredBy { get; set; }

        /// <summary>
        /// The status date for the purchase order.
        /// </summary>
        [JsonConverter(typeof(DateOnlyConverter))]
        [JsonProperty("statusDate", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public DateTime StatusDate { get; set; }


        /// <summary>
        /// The status of the purchase order.
        /// </summary>
        [JsonProperty("status", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public PurchaseOrdersStatus? Status { get; set; }

        /// <summary>
        /// The buyer associated with the purchase order.
        /// </summary>
        [JsonProperty("buyer", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public GuidObject2 Buyer { get; set; }

        /// <summary>
        /// The initiator of the purchase order.
        /// </summary>
        [JsonProperty("initiator", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public PurchaseOrdersInitiatorDtoProperty Initiator { get; set; }

        /// <summary>
        /// The shipping information associated with the purchase order.
        /// </summary>
        [JsonProperty("shipping", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public PurchaseOrdersShippingDtoProperty Shipping { get; set; }

        /// <summary>
        /// Override of the shipping information specified in the ship to destination.
        /// </summary>
        [JsonProperty("overrideShippingDestination", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public OverrideShippingDestinationDtoProperty OverrideShippingDestination { get; set; }

        /// <summary>
        /// The shipping method for the purchase order (e.g. ground, air, UPS, Purolator)
        /// </summary>
        [JsonProperty("shippingMethod", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public GuidObject2 ShippingMethod { get; set; }

        /// <summary>
        /// The vendor associated with the purchase order.
        /// </summary>
        [JsonProperty("vendor", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public PurchaseOrdersVendorDtoProperty Vendor { get; set; }

        /// <summary>
        /// The vendor payment terms and conditions that are applicable to the purchase order.
        /// </summary>
        [JsonProperty("paymentTerms", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public GuidObject2 PaymentTerms { get; set; }

        /// <summary>
        /// A user defined classification of the purchase order.
        /// </summary>
        [JsonProperty("classification", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public GuidObject2 Classification { get; set; }

        /// <summary>
        /// The person who made the submit request for the purchase order.
        /// </summary>
        [JsonProperty("submittedBy", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public GuidObject2 SubmittedBy { get; set; }

        /// <summary>
        /// The comments associated with the purchase order.
        /// </summary>
        [JsonProperty("comments", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public List<PurchaseOrdersCommentsDtoProperty> Comments { get; set; }

        /// <summary>
        /// The line items associated with the purchase order.
        /// </summary>
        [JsonProperty("lineItems", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public List<PurchaseOrdersLineItemsDtoProperty> LineItems { get; set; }

    }
}