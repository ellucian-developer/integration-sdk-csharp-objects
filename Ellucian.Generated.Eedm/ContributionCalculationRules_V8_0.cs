//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using Ellucian.Generated.Eedm;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace Ellucian.Generated.Eedm.ContributionCalculationRules_V8_0
{
    using System = global::System;

    

    /// <summary>
    /// Rules used in calculating contributions.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ContributionCalculationRules_V8_0
    {
        /// <summary>
        /// Metadata about the JSON payload
        /// </summary>
        [Newtonsoft.Json.JsonProperty("metadata", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Metadata? Metadata { get; set; } = default!;

        /// <summary>
        /// The global identifier of the contribution calculation rule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; } = default!;

        /// <summary>
        /// The full name of the contribution calculation rule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("title", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Title { get; set; } = default!;

        /// <summary>
        /// The description of the contribution calculation rule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Description { get; set; } = default!;

        /// <summary>
        /// The types of contribution that are applicable to the calculation rule. (eg: gift, pledge, recurringGift, etc)
        /// </summary>
        [Newtonsoft.Json.JsonProperty("contributionTypes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore, ItemConverterType = typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public System.Collections.Generic.ICollection<ContributionTypes>? ContributionTypes { get; set; } = default!;

        /// <summary>
        /// The types of credit that are applicable to the calculation rule. (eg: legal, recognition, etc.)
        /// </summary>
        [Newtonsoft.Json.JsonProperty("creditTypes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore, ItemConverterType = typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public System.Collections.Generic.ICollection<CreditTypes>? CreditTypes { get; set; } = default!;

        /// <summary>
        /// An indication if the specified categories are included or excluded in the calculation rule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("categoryInclusion", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ContributionCalculationRules_V8_0CategoryInclusion? CategoryInclusion { get; set; } = default!;

        /// <summary>
        /// Contribution categories to be included or excluded in the calculation rule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("categories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Categories>? Categories { get; set; } = default!;

        /// <summary>
        /// An indication if the specified category groups are included or excluded in the calculation rule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("categoryGroupInclusion", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ContributionCalculationRules_V8_0CategoryGroupInclusion? CategoryGroupInclusion { get; set; } = default!;

        /// <summary>
        /// Contribution category groups to be included or excluded in the calculation rule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("categoryGroups", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CategoryGroups>? CategoryGroups { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ContributionTypes
    {

        [System.Runtime.Serialization.EnumMember(Value = @"gift")]
        Gift = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"pledge")]
        Pledge = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"pledgePayment")]
        PledgePayment = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"recurringGift")]
        RecurringGift = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"matchingGift")]
        MatchingGift = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"expectedBequest")]
        ExpectedBequest = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"bequestPayment")]
        BequestPayment = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"dues")]
        Dues = 7,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum CreditTypes
    {

        [System.Runtime.Serialization.EnumMember(Value = @"legal")]
        Legal = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"recognition")]
        Recognition = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"match")]
        Match = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"soft")]
        Soft = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"other")]
        Other = 4,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ContributionCalculationRules_V8_0CategoryInclusion
    {

        [System.Runtime.Serialization.EnumMember(Value = @"include")]
        Include = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"exclude")]
        Exclude = 1,

    }

    /// <summary>
    /// Contribution categories to be included or excluded in the calculation rule.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Categories
    {
        /// <summary>
        /// The global identifier for the Categories.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ContributionCalculationRules_V8_0CategoryGroupInclusion
    {

        [System.Runtime.Serialization.EnumMember(Value = @"include")]
        Include = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"exclude")]
        Exclude = 1,

    }

    /// <summary>
    /// Contribution category groups to be included or excluded in the calculation rule.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CategoryGroups
    {
        /// <summary>
        /// The global identifier for the Category Groups.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; } = default!;

    }


}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016
#pragma warning restore 8603