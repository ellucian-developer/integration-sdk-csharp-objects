//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using Ellucian.Generated.Eedm;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace Ellucian.Generated.Eedm.RecruitmentEducationalInstitutions_V7_0
{
    using System = global::System;

    

    /// <summary>
    /// Institutions that provides instructional or education related services to individuals or other organizations/institutions (e.g. High Schools, Colleges, Continuing Education providers).
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RecruitmentEducationalInstitutions_V7_0
    {
        /// <summary>
        /// Metadata about the JSON payload
        /// </summary>
        [Newtonsoft.Json.JsonProperty("metadata", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Metadata? Metadata { get; set; } = default!;

        /// <summary>
        /// The global identifier of the institution.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; } = default!;

        /// <summary>
        /// The full name of the institution.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("title", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Title { get; set; } = default!;

        /// <summary>
        /// The description of the institution.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Description { get; set; } = default!;

        /// <summary>
        /// Optional link to foundation domain educational institution.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("educationalInstitution", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public EducationalInstitution? EducationalInstitution { get; set; } = default!;

        /// <summary>
        /// The type of institution.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public RecruitmentEducationalInstitutions_V7_0Type Type { get; set; } = default!;

        /// <summary>
        /// Indicates if this is a 'home' or 'external' institution
        /// </summary>
        [Newtonsoft.Json.JsonProperty("homeInstitution", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public RecruitmentEducationalInstitutions_V7_0HomeInstitution HomeInstitution { get; set; } = default!;

        /// <summary>
        /// Standardized education specific codes/IDs that are assigned to the institution.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("standardizedCodes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StandardizedCodes>? StandardizedCodes { get; set; } = default!;

        /// <summary>
        /// The physical locations where the institution resides or may be contacted by mail.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("addresses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Addresses>? Addresses { get; set; } = default!;

        /// <summary>
        /// The phones and phone-connected devices at which the institution can be contacted
        /// </summary>
        [Newtonsoft.Json.JsonProperty("phones", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Phones>? Phones { get; set; } = default!;

        /// <summary>
        /// The email addresses at which the institution can be contacted.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("emails", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Emails>? Emails { get; set; } = default!;

        /// <summary>
        /// The social media account at which the institution can be contacted.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("socialMedia", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SocialMedia>? SocialMedia { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class EducationalInstitution
    {
        /// <summary>
        /// The global identifier for the Educational Institution.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum RecruitmentEducationalInstitutions_V7_0Type
    {

        [System.Runtime.Serialization.EnumMember(Value = @"secondarySchool")]
        SecondarySchool = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"postSecondarySchool")]
        PostSecondarySchool = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum RecruitmentEducationalInstitutions_V7_0HomeInstitution
    {

        [System.Runtime.Serialization.EnumMember(Value = @"home")]
        Home = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"external")]
        External = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class StandardizedCodes
    {
        /// <summary>
        /// The country with specific educational institution codes.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("country", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Country? Country { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Addresses
    {
        /// <summary>
        /// The address associated with the location.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("address", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Address Address { get; set; } = default!;

        /// <summary>
        /// A type of location for the institution. Includes a standard type (e.g. 'main', 'support') and an optional, custom type to further identify the type of location.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Type Type { get; set; } = new Type();

        /// <summary>
        /// The current status of the institution's relationship to the location.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("status", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public AddressesStatus Status { get; set; } = default!;

        /// <summary>
        /// The earliest date that this location was valid for the institution.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("startOn", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? StartOn { get; set; } = default!;

        /// <summary>
        /// The latest date when this location was valid for the institution.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("endOn", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? EndOn { get; set; } = default!;

        /// <summary>
        /// Specifies if the location is preferred over others of the same type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("preference", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Preference? Preference { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Phones
    {
        /// <summary>
        /// A type of phone for the institution. Includes a standard type (e.g., 'main', 'support') and an optional, custom type to further identify the type of phone.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Type2 Type { get; set; } = new Type2();

        /// <summary>
        /// Specifies if the phone is preferred over others of the same type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("preference", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Preference2? Preference { get; set; } = default!;

        /// <summary>
        /// The country calling code of telephone and/or mobile device when dialing internationally.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("countryCallingCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? CountryCallingCode { get; set; } = default!;

        /// <summary>
        /// The number assigned to the phone.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("number", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Number { get; set; } = default!;

        /// <summary>
        /// The extension used to connect to the phone when multiple phones share the same primary number.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("extension", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Extension { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Emails
    {
        /// <summary>
        /// A type of email for the institution. Includes a standard type (e.g. 'general', 'hr') and an optional, custom type to further identify the type of email.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Type3 Type { get; set; } = new Type3();

        /// <summary>
        /// Specifies if the email is preferred over others of the same type or overall.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("preference", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Preference3? Preference { get; set; } = default!;

        /// <summary>
        /// An email address for the institution.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("address", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Address { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SocialMedia
    {
        /// <summary>
        /// A type of social media account for the institution. Includes a standard type (e.g. 'skype', 'facebook') and an optional, custom type to further identify the type of social media account.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Type4 Type { get; set; } = new Type4();

        /// <summary>
        /// Specifies if the social media account is preferred over others of the same type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("preference", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Preference4? Preference { get; set; } = default!;

        /// <summary>
        /// The username, handle or other address of the social media account.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("address", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Address { get; set; } = default!;

    }

    /// <summary>
    /// Codes for the United States of America
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Country
    {
        /// <summary>
        /// The ISO 3166-1 alpha-3 country code
        /// </summary>
        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CountryCode Code { get; set; } = default!;

        /// <summary>
        /// The CEEB code that is assigned to the institution.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("ceeb", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Ceeb { get; set; } = default!;

    }

    /// <summary>
    /// The address associated with the location.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Address
    {
        /// <summary>
        /// The global identifier for the Address.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Type
    {
        /// <summary>
        /// A mapping to a standard type for the address.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("addressType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public TypeAddressType AddressType { get; set; } = default!;

        /// <summary>
        /// User defined address type
        /// </summary>
        [Newtonsoft.Json.JsonProperty("detail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Detail? Detail { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum AddressesStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"active")]
        Active = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"inactive")]
        Inactive = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Preference
    {

        [System.Runtime.Serialization.EnumMember(Value = @"primary")]
        Primary = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Type2
    {
        /// <summary>
        /// A type of phone contact for the institution
        /// </summary>
        [Newtonsoft.Json.JsonProperty("phoneType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Type2PhoneType PhoneType { get; set; } = default!;

        /// <summary>
        /// User defined phone type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("detail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Detail2? Detail { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Preference2
    {

        [System.Runtime.Serialization.EnumMember(Value = @"primary")]
        Primary = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Type3
    {
        /// <summary>
        /// A mapping to a standard type for the email type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("emailType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Type3EmailType EmailType { get; set; } = default!;

        /// <summary>
        /// User defined email type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("detail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Detail3? Detail { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Preference3
    {

        [System.Runtime.Serialization.EnumMember(Value = @"primary")]
        Primary = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Type4
    {
        /// <summary>
        /// A type of social media account (e.g. 'skype', 'facebook').
        /// </summary>
        [Newtonsoft.Json.JsonProperty("socialMediaType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Type4SocialMediaType SocialMediaType { get; set; } = default!;

        /// <summary>
        /// user defined social media type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("detail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Detail4? Detail { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Preference4
    {

        [System.Runtime.Serialization.EnumMember(Value = @"primary")]
        Primary = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum CountryCode
    {

        [System.Runtime.Serialization.EnumMember(Value = @"USA")]
        USA = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum TypeAddressType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"home")]
        Home = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"school")]
        School = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"vacation")]
        Vacation = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"billing")]
        Billing = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"shipping")]
        Shipping = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"mailing")]
        Mailing = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"business")]
        Business = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"parent")]
        Parent = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"family")]
        Family = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"pobox")]
        Pobox = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"main")]
        Main = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"branch")]
        Branch = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"region")]
        Region = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"support")]
        Support = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"matchingGifts")]
        MatchingGifts = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"other")]
        Other = 15,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Detail
    {
        /// <summary>
        /// The global identifier for the Detail.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Type2PhoneType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"mobile")]
        Mobile = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"home")]
        Home = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"school")]
        School = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"vacation")]
        Vacation = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"business")]
        Business = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"fax")]
        Fax = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"pager")]
        Pager = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"tdd")]
        Tdd = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"parent")]
        Parent = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"family")]
        Family = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"main")]
        Main = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"branch")]
        Branch = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"region")]
        Region = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"support")]
        Support = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"billing")]
        Billing = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"matchingGifts")]
        MatchingGifts = 15,

        [System.Runtime.Serialization.EnumMember(Value = @"other")]
        Other = 16,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Detail2
    {
        /// <summary>
        /// The global identifier for the Detail.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Type3EmailType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"personal")]
        Personal = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"business")]
        Business = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"school")]
        School = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"parent")]
        Parent = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"family")]
        Family = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"sales")]
        Sales = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"support")]
        Support = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"general")]
        General = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"billing")]
        Billing = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"legal")]
        Legal = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"hr")]
        Hr = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"media")]
        Media = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"matchingGifts")]
        MatchingGifts = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"other")]
        Other = 13,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Detail3
    {
        /// <summary>
        /// The global identifier for the Detail.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Type4SocialMediaType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"windowsLive")]
        WindowsLive = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"yahoo")]
        Yahoo = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"skype")]
        Skype = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"qq")]
        Qq = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"hangouts")]
        Hangouts = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"icq")]
        Icq = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"jabber")]
        Jabber = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"facebook")]
        Facebook = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"twitter")]
        Twitter = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"instagram")]
        Instagram = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"tumblr")]
        Tumblr = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"pininterest")]
        Pininterest = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"linkedin")]
        Linkedin = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"foursquare")]
        Foursquare = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"youtube")]
        Youtube = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"blog")]
        Blog = 15,

        [System.Runtime.Serialization.EnumMember(Value = @"website")]
        Website = 16,

        [System.Runtime.Serialization.EnumMember(Value = @"other")]
        Other = 17,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Detail4
    {
        /// <summary>
        /// The global identifier for the Detail.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; } = default!;

    }


}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016
#pragma warning restore 8603