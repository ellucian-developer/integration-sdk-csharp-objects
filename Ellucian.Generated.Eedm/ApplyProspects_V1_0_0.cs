//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using Ellucian.Generated.Eedm;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace Ellucian.Generated.Eedm.ApplyProspects_V1_0_0
{
    using System = global::System;

    

    /// <summary>
    /// Prospects applying or looking to apply to an institution.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ApplyProspects_V1_0_0
    {
        /// <summary>
        /// Metadata about the JSON payload
        /// </summary>
        [Newtonsoft.Json.JsonProperty("metadata", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Metadata? Metadata { get; set; } = default!;

        /// <summary>
        /// The global identifier of the apply prospect.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; } = default!;

        /// <summary>
        /// The prospect's first, or given, name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("firstName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string FirstName { get; set; } = default!;

        /// <summary>
        /// The prospect's middle name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("middleName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? MiddleName { get; set; } = default!;

        /// <summary>
        /// The article or preposition portion of a prospect's last name. For example, "De la", "Van", or "Van der Von".
        /// </summary>
        [Newtonsoft.Json.JsonProperty("lastNamePrefix", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? LastNamePrefix { get; set; } = default!;

        /// <summary>
        /// The prospect's last, or family, name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("lastName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string LastName { get; set; } = default!;

        /// <summary>
        /// The email addresses at which a prospect can be contacted.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("emails", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Emails> Emails { get; set; } = new System.Collections.ObjectModel.Collection<Emails>();

        /// <summary>
        /// The phones and phone-connected devices at which a prospect can be contacted.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("phones", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Phones>? Phones { get; set; } = default!;

        /// <summary>
        /// The physical addresses where a prospect resides or may be contacted by mail.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("addresses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Addresses>? Addresses { get; set; } = default!;

        /// <summary>
        /// The biological masculinity or femininity of the prospect.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("gender", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Gender? Gender { get; set; } = default!;

        /// <summary>
        /// The prospect's self-selected gender identification.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("genderIdentity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GenderIdentity? GenderIdentity { get; set; } = default!;

        /// <summary>
        /// The prospect's self-selected choice of pronoun.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("personalPronoun", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PersonalPronoun? PersonalPronoun { get; set; } = default!;

        /// <summary>
        /// The date when the prospect was born.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("dateOfBirth", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DateOfBirth { get; set; } = default!;

        /// <summary>
        /// The citizenship status of the prospect with regards to the country where a given institution is located.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("citizenshipStatus", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CitizenshipStatus? CitizenshipStatus { get; set; } = default!;

        /// <summary>
        /// The ethnicity association of the prospect.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("ethnicity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Ethnicity? Ethnicity { get; set; } = default!;

        /// <summary>
        /// The racial groups to which a prospect belongs.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("races", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Races>? Races { get; set; } = default!;

        /// <summary>
        /// The city which the prospect was born in.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("birthCity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? BirthCity { get; set; } = default!;

        /// <summary>
        /// The country which the prospect was born in.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("countryOfBirth", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CountryOfBirth? CountryOfBirth { get; set; } = default!;

        /// <summary>
        /// The country in which the prospect is a citizen
        /// </summary>
        [Newtonsoft.Json.JsonProperty("citizenshipCountry", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CitizenshipCountry? CitizenshipCountry { get; set; } = default!;

        /// <summary>
        /// The high schools where the prospect studied.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("highSchools", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<HighSchools>? HighSchools { get; set; } = default!;

        /// <summary>
        /// The prior colleges where the prospect studied.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("priorColleges", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PriorColleges>? PriorColleges { get; set; } = default!;

        /// <summary>
        /// Interests recorded for this prospect.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("interests", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Interests>? Interests { get; set; } = default!;

        /// <summary>
        /// The Visa details of the prospect.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("visa", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Visa? Visa { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Emails
    {
        /// <summary>
        /// A type of email for a prospect. Includes a standard type (e.g. 'personal', 'business') and an optional, custom type to further identify the type of email.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Type Type { get; set; } = new Type();

        /// <summary>
        /// Specifies if the email is preferred over others of the same type or overall. Only one email should be set to primary for a prospect.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("preference", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Preference? Preference { get; set; } = default!;

        /// <summary>
        /// An email address for the prospect.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("address", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Address { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Phones
    {
        /// <summary>
        /// A type of phone for a prospect. Includes a standard type (e.g. 'mobile', 'home') and an optional, custom type to further identify the type of phone.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Type2 Type { get; set; } = new Type2();

        /// <summary>
        /// The country calling code of telephone and/or mobile device when dialing internationally.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("countryCallingCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? CountryCallingCode { get; set; } = default!;

        /// <summary>
        /// The number assigned to the phone.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("number", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Number { get; set; } = default!;

        /// <summary>
        /// The extension used to connect to the phone when multiple phones share the same primary number.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("extension", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Extension { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Addresses
    {
        /// <summary>
        /// The associated physical address.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("address", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Address? Address { get; set; } = default!;

        /// <summary>
        /// A type of address for a prospect. Includes a standard type (e.g. 'home', 'school') and an optional, custom type to further identify the type of address.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Type3? Type { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Gender
    {

        [System.Runtime.Serialization.EnumMember(Value = @"male")]
        Male = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"female")]
        Female = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"unknown")]
        Unknown = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GenderIdentity
    {
        /// <summary>
        /// The global identifier for the Gender Identity.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PersonalPronoun
    {
        /// <summary>
        /// The global identifier for the Personal Pronoun.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CitizenshipStatus
    {
        /// <summary>
        /// The global identifier for the Citizenship Status.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Ethnicity
    {
        /// <summary>
        /// The ethnic group with which the prospect identifies.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("ethnicGroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public EthnicGroup? EthnicGroup { get; set; } = default!;

        /// <summary>
        /// Properties required for governmental or other reporting.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("reporting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Reporting>? Reporting { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Races
    {
        /// <summary>
        /// The race to which a prospect belongs.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("race", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Race? Race { get; set; } = default!;

        /// <summary>
        /// Properties required for governmental or other reporting.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("reporting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Reporting2>? Reporting { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CountryOfBirth
    {
        /// <summary>
        /// The global identifier for the Country of Birth.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CitizenshipCountry
    {
        /// <summary>
        /// The global identifier for the Citizenship Country.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class HighSchools
    {
        /// <summary>
        /// The educational institution where the prospect studied.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("institution", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Institution? Institution { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PriorColleges
    {
        /// <summary>
        /// The educational institution where the prospect studied.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("institution", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Institution2? Institution { get; set; } = default!;

    }

    /// <summary>
    /// Interests recorded for this prospect.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Interests
    {
        /// <summary>
        /// The global identifier for the Interests.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Visa
    {
        /// <summary>
        /// Visa type of the prospect.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("visaType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public VisaType? VisaType { get; set; } = default!;

        /// <summary>
        /// The identifier number of the visa.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("visaId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? VisaId { get; set; } = default!;

        /// <summary>
        /// The date when the visa was issued.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("visaIssuedOn", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? VisaIssuedOn { get; set; } = default!;

        /// <summary>
        /// The date when the visa will expire.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("visaExpiresOn", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? VisaExpiresOn { get; set; } = default!;

        /// <summary>
        /// The prospect's alien registration number if non-citizen.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("alienRegistrationNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? AlienRegistrationNumber { get; set; } = default!;

        /// <summary>
        /// The prospect's alien registration expiration date if non-citizen.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("alienRegistrationExpirationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? AlienRegistrationExpirationDate { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Type
    {
        /// <summary>
        /// A mapping to a standard type for the email type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("emailType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public TypeEmailType EmailType { get; set; } = default!;

        /// <summary>
        /// Additional details about the type of email.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("detail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Detail? Detail { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Preference
    {

        [System.Runtime.Serialization.EnumMember(Value = @"primary")]
        Primary = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Type2
    {
        /// <summary>
        /// A type of phone contact for a prospect.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("phoneType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Type2PhoneType PhoneType { get; set; } = default!;

        /// <summary>
        /// Additional details about the type of phone.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("detail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Detail2? Detail { get; set; } = default!;

    }

    /// <summary>
    /// The details associated with an existing address.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Address
    {
        /// <summary>
        /// The global identifier for the Address.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Type3
    {
        /// <summary>
        /// A mapping to a standard type for the address type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("addressType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Type3AddressType AddressType { get; set; } = default!;

        /// <summary>
        /// Additional details about the type of address.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("detail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Detail3? Detail { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class EthnicGroup
    {
        /// <summary>
        /// The global identifier for the Ethnic Group.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Reporting
    {
        /// <summary>
        /// The country with specific reporting requirements.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("country", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Country? Country { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Race
    {
        /// <summary>
        /// The global identifier for the Race.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Reporting2
    {
        /// <summary>
        /// The country with specific reporting requirements.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("country", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Country2? Country { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Institution
    {
        /// <summary>
        /// The global identifier for the Institution.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Institution2
    {
        /// <summary>
        /// The global identifier for the Institution.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class VisaType
    {
        /// <summary>
        /// A global category of visa types.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("category", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public VisaTypeCategory Category { get; set; } = default!;

        /// <summary>
        /// The Visa type details.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("detail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Detail4? Detail { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum TypeEmailType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"personal")]
        Personal = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"business")]
        Business = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"school")]
        School = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"parent")]
        Parent = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"family")]
        Family = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"sales")]
        Sales = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"support")]
        Support = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"general")]
        General = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"billing")]
        Billing = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"legal")]
        Legal = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"hr")]
        Hr = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"media")]
        Media = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"matchingGifts")]
        MatchingGifts = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"other")]
        Other = 13,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Detail
    {
        /// <summary>
        /// The global identifier for the Detail.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Type2PhoneType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"mobile")]
        Mobile = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"home")]
        Home = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"school")]
        School = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"vacation")]
        Vacation = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"business")]
        Business = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"fax")]
        Fax = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"pager")]
        Pager = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"tdd")]
        Tdd = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"parent")]
        Parent = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"family")]
        Family = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"main")]
        Main = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"branch")]
        Branch = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"region")]
        Region = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"support")]
        Support = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"billing")]
        Billing = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"matchingGifts")]
        MatchingGifts = 15,

        [System.Runtime.Serialization.EnumMember(Value = @"other")]
        Other = 16,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Detail2
    {
        /// <summary>
        /// The global identifier for the Detail.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Type3AddressType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"home")]
        Home = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"school")]
        School = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"vacation")]
        Vacation = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"billing")]
        Billing = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"shipping")]
        Shipping = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"mailing")]
        Mailing = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"business")]
        Business = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"parent")]
        Parent = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"family")]
        Family = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"pobox")]
        Pobox = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"main")]
        Main = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"branch")]
        Branch = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"region")]
        Region = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"support")]
        Support = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"matchingGifts")]
        MatchingGifts = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"other")]
        Other = 15,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Detail3
    {
        /// <summary>
        /// The global identifier for the Detail.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; } = default!;

    }

    /// <summary>
    /// Reporting requirements for the United States of America.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Country
    {
        /// <summary>
        /// The country code for the United States of America.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CountryCode Code { get; set; } = default!;

        /// <summary>
        /// The category of ethnic origin to which a prospect belongs.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("ethnicCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CountryEthnicCategory EthnicCategory { get; set; } = default!;

    }

    /// <summary>
    /// Reporting requirements for the United States of America.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Country2
    {
        /// <summary>
        /// The country code for the United States of America.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Country2Code Code { get; set; } = default!;

        /// <summary>
        /// The IPEDS racial category to which the race belongs.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("racialCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Country2RacialCategory RacialCategory { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum VisaTypeCategory
    {

        [System.Runtime.Serialization.EnumMember(Value = @"immigrant")]
        Immigrant = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"nonImmigrant")]
        NonImmigrant = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Detail4
    {
        /// <summary>
        /// The global identifier for the Detail.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum CountryCode
    {

        [System.Runtime.Serialization.EnumMember(Value = @"USA")]
        USA = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum CountryEthnicCategory
    {

        [System.Runtime.Serialization.EnumMember(Value = @"hispanic")]
        Hispanic = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"nonHispanic")]
        NonHispanic = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Country2Code
    {

        [System.Runtime.Serialization.EnumMember(Value = @"USA")]
        USA = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Country2RacialCategory
    {

        [System.Runtime.Serialization.EnumMember(Value = @"americanIndianOrAlaskaNative")]
        AmericanIndianOrAlaskaNative = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"asian")]
        Asian = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"blackOrAfricanAmerican")]
        BlackOrAfricanAmerican = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"hawaiianOrPacificIslander")]
        HawaiianOrPacificIslander = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"white")]
        White = 4,

    }


}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016
#pragma warning restore 8603