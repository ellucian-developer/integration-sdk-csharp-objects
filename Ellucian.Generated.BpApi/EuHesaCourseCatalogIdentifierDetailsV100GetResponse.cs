//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace Ellucian.Generated.BpApi.Ban.EuHesaCourseCatalogIdentifierDetailsV100GetResponse
{
    using System = global::System;

    

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class EuHesaCourseCatalogIdentifierDetailsV100GetResponse
    {
        [Newtonsoft.Json.JsonProperty("sobccid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Sobccid>? Sobccid { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("sorccms", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Sorccms>? Sorccms { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("sorccdc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Sorccdc>? Sorccdc { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("sorccdr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Sorccdr>? Sorccdr { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Sobccid
    {
        /// <summary>
        /// Lineage reference object : SOBCCID_SSDT_CODE_CRDT_PTS_LVL, Lookup lineage reference object : skvssdt,skvssdt
        /// </summary>
        [Newtonsoft.Json.JsonProperty("ssdtCodeCrdtPtsLvl", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? SsdtCodeCrdtPtsLvl { get; set; } = default!;

        /// <summary>
        /// Lineage reference object : SOBCCID_FULL_TIME_EQUIVALENCE
        /// </summary>
        [Newtonsoft.Json.JsonProperty("fullTimeEquivalence", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? FullTimeEquivalence { get; set; } = default!;

        /// <summary>
        /// Lineage reference object : SOBCCID_SSDT_CODE_LANG_ID, Lookup lineage reference object : skvssdt,skvssdt
        /// </summary>
        [Newtonsoft.Json.JsonProperty("SobccidSsdtCodeLangId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? SobccidSsdtCodeLangId { get; set; } = default!;

        /// <summary>
        /// Lineage reference object : SOBCCID_ACTIVITY_DATE
        /// </summary>
        [Newtonsoft.Json.JsonProperty("activityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ActivityDate { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ssdtCodeCrdtPtsLvlSt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? SsdtCodeCrdtPtsLvlSt { get; set; } = default!;

        /// <summary>
        /// Lineage reference object : SOBCCID_MODULE_TITLE
        /// </summary>
        [Newtonsoft.Json.JsonProperty("SobccidModuleTitle", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? SobccidModuleTitle { get; set; } = default!;

        /// <summary>
        /// Lineage reference object : SOBCCID_MOD_CRDT_VAL
        /// </summary>
        [Newtonsoft.Json.JsonProperty("modCrdtVal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ModCrdtVal { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ssdtCodeCrdtTraSchSt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? SsdtCodeCrdtTraSchSt { get; set; } = default!;

        /// <summary>
        /// Lineage reference object : SOBCCID_USER_ID
        /// </summary>
        [Newtonsoft.Json.JsonProperty("userId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? UserId { get; set; } = default!;

        /// <summary>
        /// Lineage reference object : SOBCCID_MOD_ID
        /// </summary>
        [Newtonsoft.Json.JsonProperty("modId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? ModId { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("SobccidSsdtCodeLangIdSt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? SobccidSsdtCodeLangIdSt { get; set; } = default!;

        /// <summary>
        /// Lineage reference object : SOBCCID_SSDT_CODE_CRDT_TRA_SCH, Lookup lineage reference object : skvssdt,skvssdt
        /// </summary>
        [Newtonsoft.Json.JsonProperty("ssdtCodeCrdtTraSch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? SsdtCodeCrdtTraSch { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Sorccms
    {
        /// <summary>
        /// Lineage reference object : SORCCMS_ACTIVITY_DATE
        /// </summary>
        [Newtonsoft.Json.JsonProperty("activityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ActivityDate { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ssdtCodeModSubSt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? SsdtCodeModSubSt { get; set; } = default!;

        /// <summary>
        /// Lineage reference object : SORCCMS_SSDT_CODE_MOD_SUB, Lookup lineage reference object : skvssdt,skvssdt
        /// </summary>
        [Newtonsoft.Json.JsonProperty("ssdtCodeModSub", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SsdtCodeModSub { get; set; } = default!;

        /// <summary>
        /// Lineage reference object : SORCCMS_MOD_PROPORTION
        /// </summary>
        [Newtonsoft.Json.JsonProperty("modProportion", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ModProportion { get; set; } = default!;

        /// <summary>
        /// Lineage reference object : SORCCMS_USER_ID
        /// </summary>
        [Newtonsoft.Json.JsonProperty("userId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? UserId { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Sorccdc
    {
        /// <summary>
        /// Lineage reference object : SORCCDC_ACTIVITY_DATE
        /// </summary>
        [Newtonsoft.Json.JsonProperty("activityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ActivityDate { get; set; } = default!;

        /// <summary>
        /// Lineage reference object : SORCCDC_COST_CENTRE_PROPORTION
        /// </summary>
        [Newtonsoft.Json.JsonProperty("costCentreProportion", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CostCentreProportion { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ssdtCodeCostCentreSt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? SsdtCodeCostCentreSt { get; set; } = default!;

        /// <summary>
        /// Lineage reference object : SORCCDC_SSDT_CODE_COST_CENTRE
        /// </summary>
        [Newtonsoft.Json.JsonProperty("ssdtCodeCostCentre", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SsdtCodeCostCentre { get; set; } = default!;

        /// <summary>
        /// Lineage reference object : SORCCDC_USER_ID
        /// </summary>
        [Newtonsoft.Json.JsonProperty("userId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? UserId { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Sorccdr
    {
        /// <summary>
        /// Lineage reference object : SORCCDR_SSDT_CODE_FRAN_IND, Lookup lineage reference object : skvssdt,skvssdt
        /// </summary>
        [Newtonsoft.Json.JsonProperty("ssdtCodeFranInd", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? SsdtCodeFranInd { get; set; } = default!;

        /// <summary>
        /// Lineage reference object : SORCCDR_ACTIVITY_DATE
        /// </summary>
        [Newtonsoft.Json.JsonProperty("activityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ActivityDate { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ssdtCodeHesaIdSt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? SsdtCodeHesaIdSt { get; set; } = default!;

        /// <summary>
        /// Lineage reference object : SORCCDR_SSDT_CODE_HESA_ID, Lookup lineage reference object : skvssdt,skvssdt
        /// </summary>
        [Newtonsoft.Json.JsonProperty("ssdtCodeHesaId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SsdtCodeHesaId { get; set; } = default!;

        [Newtonsoft.Json.JsonProperty("ssdtCodeFranIndSt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? SsdtCodeFranIndSt { get; set; } = default!;

        /// <summary>
        /// Lineage reference object : SORCCDR_USER_ID
        /// </summary>
        [Newtonsoft.Json.JsonProperty("userId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? UserId { get; set; } = default!;

        /// <summary>
        /// Lineage reference object : SORCCDR_ROLE_PROPORTION
        /// </summary>
        [Newtonsoft.Json.JsonProperty("roleProportion", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RoleProportion { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }

    }


}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016
#pragma warning restore 8603